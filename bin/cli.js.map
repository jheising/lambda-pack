{"version":3,"file":"cli.js","sourceRoot":"","sources":["cli.ts"],"names":[],"mappings":";;;AACA,uCAAuC;AACvC,8CAAyC;AACzC,4BAA4B;AAC5B,MAAM,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAElC,IAAI,iBAAiB,CAAC;AACtB,IAAI,iBAAiB,CAAC;AACtB,IAAI,UAAU,CAAC;AAEf,IAAI,WAAW,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAE7C,SAAS;KACJ,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC;KAC5B,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC;KACpC,SAAS,CAAC,yDAAyD,CAAC;KACpE,MAAM,CAAC,UAAU,kBAAkB,EAAE,kBAAkB,EAAE,WAAW;IACjE,iBAAiB,GAAG,kBAAkB,CAAC;IACvC,iBAAiB,GAAG,kBAAkB,CAAC;IACvC,UAAU,GAAG,WAAW,CAAC;AAC7B,CAAC,CAAC;KACD,MAAM,CAAC,aAAa,EAAE,YAAY,CAAC;KACnC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAEzB,EAAE,CAAA,CAAC,CAAC,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAC5D,CAAC;IACG,SAAS,CAAC,UAAU,EAAE,CAAC;IACvB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC;AAED,uBAAU,CAAC,OAAO,CAAC,iBAAiB,EAAE,UAAU,EAAE,iBAAiB,EAAE,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,KAAK,EAAE,EAAE;IACnG,EAAE,CAAA,CAAC,KAAK,CAAC,CACT,CAAC;QACG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,MAAM,CAAC;IACX,CAAC;IAED,OAAO,CAAC,IAAI,EAAE,CAAC;AACnB,CAAC,CAAC,CAAC","sourcesContent":["#! /usr/bin/env node\nimport * as commander from \"commander\";\nimport {LambdaPack} from \"../LambdaPack\";\nimport * as _ from \"lodash\";\nconst uuidv3 = require('uuid/v3');\n\nlet lambdaHandlerFile;\nlet outputZipFileName;\nlet otherFiles;\n\nlet packageJSON = require(\"../package.json\");\n\ncommander\n    .version(packageJSON.version)\n    .description(packageJSON.description)\n    .arguments(\"<lambdaHandlerFile> <outputZipFileName> [otherFiles...]\")\n    .action(function (_lambdaHandlerFile, _outputZipFileName, _otherFiles) {\n        lambdaHandlerFile = _lambdaHandlerFile;\n        outputZipFileName = _outputZipFileName;\n        otherFiles = _otherFiles;\n    })\n    .option(\"-q, --quiet\", \"quiet mode\")\n    .parse(process.argv);\n\nif(_.isNil(lambdaHandlerFile) || _.isNil(outputZipFileName))\n{\n    commander.outputHelp();\n    process.exit(1);\n}\n\nLambdaPack.package(lambdaHandlerFile, otherFiles, outputZipFileName, !commander.quiet, true, (error) => {\n    if(error)\n    {\n        process.exit(1);\n        return;\n    }\n\n    process.exit();\n});"]}